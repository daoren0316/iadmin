<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cc.kokoko.server.ibutler.persistence.CountMapper">

	<select id="getAllAccedUserList" resultType="long">
		SELECT DISTINCT
		toUid AS uid FROM `ibutler_accepted_answer`
	</select>
	
	<select id="getAllAccedUserListByWeek"  resultType="long">
	select uid from ibutler_user_last_week where
	<![CDATA[
	 accInLastWeek >0
	  ]]>
	  ORDER BY accInLastWeek DESC
	</select>

	<insert id="createUserAccedCount" parameterType="map">
		INSERT INTO ibutler_user_acc_count(uid, accCount, accDate)
		VALUES(#{uid}, #{accCount}, #{accDate})
	</insert>

	<update id="addUserAccedCount" parameterType="map">
		UPDATE
		ibutler_user_acc_count
		SET
		accCount = accCount + 1
		WHERE
		uid = #{uid}
		AND
		accDate = #{accDate}
	</update>


	<select id="getUserAccedCount" parameterType="map" resultType="int">
		SELECT accCount FROM `ibutler_user_acc_count` where uid = #{uid} AND
		accDate = #{dateStr}
	</select>

	<select id="getUserAccedCountByWeek" parameterType="map"
		resultType="int">
		SELECT accCount FROM `ibutler_user_acc_count` where uid = #{uid}
		AND
		<![CDATA[
		 accDate >=#{start} 
		 ]]>
		 AND 
		 <![CDATA[
		 accDate <=#{end}
		 ]]>
	</select>

	<select id="getYesterdayFromMySQL" resultType="string">
		SELECT DATE_SUB( current_date, INTERVAL 1 DAY ) AS yesterday
	</select>
	
	<select id="getAccedList" parameterType="map" resultType="map">
		select toUid, postTime from ibutler_accepted_answer WHERE 1
		<if test="start != null">
	    	<![CDATA[
	       AND  postTime >= #{start}
	         ]]>
		</if>
		<if test="end != null">
	    	<![CDATA[
	       AND  postTime <= #{end}
	         ]]>
		</if>
		LIMIT 100000
	</select>

	<delete id="deleteUserLastWeek" parameterType="long">
		delete from ibutler_user_last_week where uid = #{uid}
	</delete>

	<insert id="createUserLastWeek" parameterType="map">
		insert into ibutler_user_last_week (uid, accInLastWeek, accInLastWeekRank,
		updateTime) values(#{uid}, #{count}, 0, NOW())
	</insert>

</mapper>