<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:bean="http://www.springframework.org/schema/util"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-2.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://cxf.apache.org/jaxrs
        http://cxf.apache.org/schemas/jaxrs.xsd
        http://cxf.apache.org/transports/http/configuration
        http://cxf.apache.org/schemas/configuration/http-conf.xsd">
    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	<import resource="classpath:ibutler-struts-beans.xml" />
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<context:component-scan base-package="cc.kokoko.server.ibutler.service" />
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="validationQuery">
			<value>select 1</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cc.kokoko.server.ibutler.persistence" />
	</bean>


	<!-- enable autowire -->
	<context:annotation-config />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- define the SqlSessionFactory, notice that configLocation is not needed
		when you use MapperFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<bean id="depthProperties" class="org.apache.cxf.staxutils.DocumentDepthProperties">
		<property name="innerElementCountThreshold" value="500" />
	</bean>



	<jaxrs:server id="restContainer" address="/">
		<jaxrs:serviceBeans>
			<ref bean="restUserService" />
			<ref bean="restAttachmentService" />
			<ref bean="restMessageService" />
			<ref bean="restHouseService" />
			<ref bean="restFeedbackService" />
			<ref bean="restFeeService" />
			<ref bean="restShopService" />
			<ref bean="restCommodityService" />
			<ref bean="restSiteService" />
			<ref bean="restMoneyService" />
			<ref bean="restActivityService" />
            <ref bean="restReceiptService" />
		</jaxrs:serviceBeans>
		<jaxrs:extensionMappings>
			<entry key="json" value="application/json" />
			<entry key="xml" value="application/xml" />
		</jaxrs:extensionMappings>
		<jaxrs:providers>
			<ref bean="jaxbXmlProvider" />
			<ref bean="jsonProvider" />
		</jaxrs:providers>

	</jaxrs:server>

	<!-- Webservice message handlers -->
	<bean id="jaxbXmlProvider" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider">
		<property name="jaxbElementClassNames" ref="elements" />
	</bean>

	<bean id="jacksonMapper" class="org.codehaus.jackson.map.ObjectMapper">
		<property name="serializationConfig.dateFormat">
			<bean class="java.text.SimpleDateFormat">
				<constructor-arg value="yyyy-MM-dd HH:mm:ss" />
			</bean>
		</property>
	</bean>
	<bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider">
		<property name="mapper" ref="jacksonMapper" />
	</bean>

	<util:list id="elements">
		<value>cc.kokoko.server.ibutler.domain.JsonResult</value>
	</util:list>

</beans>